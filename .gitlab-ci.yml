variables:
  APP_VERSION: v0.$CI_PIPELINE_IID

stages:
  - build
  - deploy

.build_job_template:
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - docker-runner
  only:
    - master

.deploy_template:
  script:
    - echo "Deploying application..."
    - echo "Deploying version $APP_VERSION"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker stop $CI_PROJECT_NAME || true
    - docker rm $CI_PROJECT_NAME || true
    - docker run -d -p 80:80 --name $CI_PROJECT_NAME $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - docker-runner
  needs:
    - build
  only:
    - master
  after_script:
    - 'if [ "$CI_JOB_STATUS" == "success" ]; then curl -X POST -H "Content-type: application/json" --data "{\"content\":\"Deployment successful! Version: $CI_COMMIT_REF_NAME\"}" https://discord.com/api/webhooks/1192450981724696716/W4HTbRqpuMMuF8u9Fm9ydm6MG7-DxfoE6zHrQfwlV4L9sUyCgVeHKFuO9tHKfQf4on4p; fi'
    - 'if [ "$CI_JOB_STATUS" == "failed" ]; then curl -X POST -H "Content-type: application/json" --data "{\"content\":\"Deployment failed! Version: $CI_COMMIT_REF_NAME\"}" https://discord.com/api/webhooks/1192450981724696716/W4HTbRqpuMMuF8u9Fm9ydm6MG7-DxfoE6zHrQfwlV4L9sUyCgVeHKFuO9tHKfQf4on4p; fi'

include:
  - local: build-stage.yml
  - local: deploy-stage.yml


